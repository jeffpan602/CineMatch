[{"/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/index.js":"1","/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/App.js":"2","/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/CineMatch.js":"3","/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/UserPage.js":"4","/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/CineMatchNavBar.js":"5"},{"size":484,"mtime":1681450839120,"results":"6","hashOfConfig":"7"},{"size":1293,"mtime":1681451239551,"results":"8","hashOfConfig":"7"},{"size":5957,"mtime":1681442729351,"results":"9","hashOfConfig":"7"},{"size":2966,"mtime":1681451810997,"results":"10","hashOfConfig":"7"},{"size":2265,"mtime":1681452488125,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11qkrww",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/index.js",[],[],"/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/App.js",[],[],"/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/CineMatch.js",["29","30","31"],[],"import { Modal, show, Button } from 'react-bootstrap';\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\n\n\nconst API_IMG = \"https://image.tmdb.org/t/p/w500/\";\nconst API_BASE = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"b5d2f69cf0491ce4441c4d04c4befc3d\";\n\n\nconst CineMatch = ({ title, poster_path, vote_average, release_date, overview, id }) => {\n\n\n  const [show, setShow] = useState(false);\n  const [towatch_show, setToWatchShow] = useState(false);\n  const [watched_show, setWatchedShow] = useState(false);\n  const [cast, setCast] = useState([]);\n  const [director, setDirector] = useState(\"\");\n\n\n\n\n  const [userRating, setUserRating] = useState(5);\n\n\n\n\n\n  const handleShow = () => setShow(true);\n  const handleClose = () => setShow(false);\n  const handleToWatchShow = () => { setToWatchShow(true); setShow(false); };\n  const handleToWatchClose = () => setToWatchShow(false);\n  const handleWatchedShow = () => { setWatchedShow(true); setShow(false); };\n  const handleWatchedClose = () => setWatchedShow(false);\n\n\n\n  // function to add the movie id to the to-watch list table \n  const addToToWatchList = ({ id }) => {\n    setToWatchShow(false);\n\n    const movieData = {\n      movie_id: id,\n      completed: false,\n    }\n\n    axios.post(`http://127.0.0.1:8000/api/to_watch/`, movieData).then(response => {\n      console.log(response.data);\n    })\n      .catch(error => {\n        console.log(error);\n        console.log(movieData)\n      });\n  };\n\n  // function to add the movie info to the watched list table \n  const addToWatchedList = ({ id }, userRating) => {\n    setWatchedShow(false);\n\n    const movieData = {\n      movie_id: id,\n      rating: userRating,\n      review: \"movie :)\"\n    };\n\n    axios.post(`http://127.0.0.1:8000/api/watched/`, movieData)\n      .then(response => {\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.log(error);\n        console.log(userRating.toString())\n      });\n  };\n\n\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const res = await fetch(`${API_BASE}/movie/${id}?api_key=${API_KEY}&append_to_response=credits`);\n        const data = await res.json();\n        const credits = data.credits;\n\n\n        // Get directors\n        const directors = credits.crew\n          .filter((person) => person.job === \"Director\")\n          .map((person) => person.name);\n        setDirector(directors);\n\n\n        // Get top 5 cast members\n        const cast = credits.cast.slice(0, 5).map((person) => person.name);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n\n    getMovieDetails();\n  }, [id]);\n\n\n  return (\n    <div className=\"card text-center bg-secondary mb-3\">\n      <div className=\"card-body\">\n        <img className=\"card-img-top\" src={API_IMG + poster_path} />\n        <div className=\"card-body\">\n          <button type=\"button\" className=\"btn btn-dark\" onClick={handleShow}>View More</button>\n          <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <img className=\"card-img-top\" style={{ width: '14rem' }} src={API_IMG + poster_path} />\n              <h3>{title}</h3>\n              <strong>Release Date: </strong>{release_date}\n              <br></br>\n              <br></br>\n              <strong>IMDb: </strong>{vote_average}\n              <br></br>\n              <br></br>\n              {director.length > 0 &&\n                <div>\n                  <strong>Director(s):</strong>\n                  <ul>\n                    {director.map((person) => <li key={person}>{person}</li>)}\n                  </ul>\n                </div>\n              }\n              {cast.length > 0 &&\n                <div>\n                  <strong>Cast:</strong>\n                  <ul>\n                    {cast.map((person) => <li key={person}>{person}</li>)}\n                  </ul>\n                </div>\n              }\n              <strong>Overview:</strong>\n              <p>{overview}</p>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleWatchedShow}>Add to Watched List</Button>\n              <Button variant=\"secondary\" onClick={handleToWatchShow}>Add to To-Watch List</Button>\n              <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n\n\n            </Modal.Footer>\n          </Modal>\n          <Modal show={towatch_show} onHide={handleToWatchClose}>\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <h3>Add \"{title}\" to To-Watch List?</h3>\n              <br></br>\n              <br></br>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => addToToWatchList({ id })}>Add to To-Watch List</Button>\n              <Button variant=\"secondary\" onClick={handleToWatchClose}>Cancel</Button>\n\n            </Modal.Footer>\n          </Modal>\n\n\n\n\n          <Modal show={watched_show} onHide={handleWatchedClose}>\n            <Modal.Header closeButton>\n              <Modal.Title></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <h3>Add \"{title}\" to Watched List?</h3>\n              <br></br>\n              <br></br>\n              <h6>My Rating: {userRating}</h6>\n              <input type=\"range\" min=\"0\" max=\"10\" value={userRating} step=\"1\" onChange={(event) => setUserRating(event.target.value)} />\n\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => addToWatchedList({ id }, userRating)}>Add to Watched List</Button>\n              <Button variant=\"secondary\" onClick={handleWatchedClose}>Cancel</Button>\n\n            </Modal.Footer>\n          </Modal>\n\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default CineMatch;",[],"/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/UserPage.js",["32"],[],"/Users/ulisessoto/Documents/GitHub/CineMatch/cinematch-client/src/CineMatchNavBar.js",["33","34"],[],{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":21},{"ruleId":"39","severity":1,"message":"40","line":110,"column":9,"nodeType":"41","endLine":110,"endColumn":69},{"ruleId":"39","severity":1,"message":"40","line":118,"column":15,"nodeType":"41","endLine":118,"endColumn":102},{"ruleId":"35","severity":1,"message":"42","line":11,"column":10,"nodeType":"37","messageId":"38","endLine":11,"endColumn":16},{"ruleId":"35","severity":1,"message":"43","line":5,"column":7,"nodeType":"37","messageId":"38","endLine":5,"endColumn":14},{"ruleId":"35","severity":1,"message":"44","line":6,"column":7,"nodeType":"37","messageId":"38","endLine":6,"endColumn":17},"no-unused-vars","'show' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'movies' is assigned a value but never used.","'API_URL' is assigned a value but never used.","'API_SEARCH' is assigned a value but never used."]