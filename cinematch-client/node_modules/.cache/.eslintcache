[{"C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\index.js":"1","C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\App.js":"2","C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\CineMatch.js":"3"},{"size":228,"mtime":1681085295673,"results":"4","hashOfConfig":"5"},{"size":2661,"mtime":1681255918215,"results":"6","hashOfConfig":"5"},{"size":5395,"mtime":1681278312335,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12n5aek",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\index.js",[],[],"C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\App.js",["18"],[],"import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport CineMatch from './CineMatch';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Container, Nav, Form, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst API_URL = \"https://api.themoviedb.org/3/trending/movie/week?api_key=b5d2f69cf0491ce4441c4d04c4befc3d\";\r\nconst API_SEARCH = \"https://api.themoviedb.org/3/search/movie?api_key=b5d2f69cf0491ce4441c4d04c4befc3d&query\";\r\nfunction App() {\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(API_URL)\r\n      .then((res) => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setMovies(data.results);\r\n      })\r\n  }, [])\r\n\r\n\r\n  const searchMovie = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Searching\");\r\n    try {\r\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=b5d2f69cf0491ce4441c4d04c4befc3d&query=${query}`;\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setMovies(data.results);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const changeHandler = (e) => {\r\n    setQuery(e.target.value);\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"/home\">CineMatch</Navbar.Brand>\r\n          <Navbar.Brand href=\"/home\">Trending</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbarScroll\"></Navbar.Toggle>\r\n\r\n          <Navbar.Collapse id=\"nabarScroll\">\r\n            <Nav\r\n              className=\"me-auto my-2 my-lg-3\"\r\n              style={{ maxHeight: '100px' }}\r\n              navbarScroll></Nav>\r\n\r\n            <Form className=\"d-flex\" onSubmit={searchMovie} autoComplete=\"off\">\r\n              <FormControl\r\n                type=\"search\"\r\n                placeholder=\"Movie Search\"\r\n                className=\"me-2\"\r\n                aria-label=\"search\"\r\n                name=\"query\"\r\n                value={query} onChange={changeHandler}></FormControl>\r\n              <Button variant=\"secondary\" type=\"submit\">Search</Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <div>\r\n        {movies.length > 0 ? (\r\n          <div className=\"container\">\r\n            <div className=\"grid\">\r\n              {movies.map((movieReq) =>\r\n                <CineMatch key={movieReq.id} {...movieReq} />)}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <h2>Sorry, no movies were found!</h2>\r\n        )}\r\n      </div>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\CineMatch.js",["19","20","21"],[],{"ruleId":"22","severity":1,"message":"23","line":8,"column":7,"nodeType":"24","messageId":"25","endLine":8,"endColumn":17},{"ruleId":"22","severity":1,"message":"26","line":1,"column":17,"nodeType":"24","messageId":"25","endLine":1,"endColumn":21},{"ruleId":"27","severity":1,"message":"28","line":73,"column":9,"nodeType":"29","endLine":73,"endColumn":69},{"ruleId":"27","severity":1,"message":"28","line":81,"column":15,"nodeType":"29","endLine":81,"endColumn":102},"no-unused-vars","'API_SEARCH' is assigned a value but never used.","Identifier","unusedVar","'show' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]