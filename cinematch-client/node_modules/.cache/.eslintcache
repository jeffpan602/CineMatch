[{"C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\index.js":"1","C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\App.js":"2","C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\CineMatch.js":"3"},{"size":228,"mtime":1681085295673,"results":"4","hashOfConfig":"5"},{"size":2550,"mtime":1681085295670,"results":"6","hashOfConfig":"5"},{"size":3040,"mtime":1681085295671,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12n5aek",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\index.js",[],[],"C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\App.js",["19"],[],"import React,{useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport CineMatch from './CineMatch';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar,Container,Nav,Form, FormControl,Button } from 'react-bootstrap';\r\n\r\nconst API_URL=\"https://api.themoviedb.org/3/trending/movie/week?api_key=b5d2f69cf0491ce4441c4d04c4befc3d\";\r\nconst API_SEARCH=\"https://api.themoviedb.org/3/search/movie?api_key=b5d2f69cf0491ce4441c4d04c4befc3d&query\";\r\nfunction App() {\r\n\r\n  const [movies, setMovies]=useState([]);\r\n  const [query, setQuery]=useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(API_URL)\r\n    .then((res)=>res.json())\r\n    .then(data=>{\r\n      console.log(data);\r\n      setMovies(data.results);\r\n    })\r\n  }, [])\r\n\r\n\r\n  const searchMovie = async(e)=>{\r\n    e.preventDefault();\r\n    console.log(\"Searching\");\r\n    try{\r\n      const url=`https://api.themoviedb.org/3/search/movie?api_key=b5d2f69cf0491ce4441c4d04c4befc3d&query=${query}`;\r\n      const res= await fetch(url);\r\n      const data= await res.json();\r\n      console.log(data);\r\n      setMovies(data.results);\r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  const changeHandler=(e)=>{\r\n    setQuery(e.target.value);\r\n  }\r\n  return (\r\n    <>\r\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n      <Container fluid>\r\n        <Navbar.Brand href=\"/home\">CineMatch</Navbar.Brand>\r\n        <Navbar.Brand href=\"/home\">Trending</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\"></Navbar.Toggle>\r\n\r\n          <Navbar.Collapse id=\"nabarScroll\">\r\n            <Nav \r\n            className=\"me-auto my-2 my-lg-3\"\r\n            style={{maxHeight:'100px'}}\r\n            navbarScroll></Nav>\r\n\r\n            <Form className=\"d-flex\" onSubmit={searchMovie} autoComplete=\"off\">\r\n              <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Movie Search\"\r\n              className=\"me-2\"\r\n              aria-label=\"search\"\r\n              name=\"query\"\r\n              value={query} onChange={changeHandler}></FormControl>\r\n              <Button variant=\"secondary\" type=\"submit\">Search</Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n    <div>\r\n      {movies.length > 0 ?(\r\n        <div className=\"container\">\r\n        <div className=\"grid\">\r\n          {movies.map((movieReq)=>\r\n          <CineMatch key={movieReq.id} {...movieReq}/>)}\r\n            </div>\r\n    </div>\r\n      ):(\r\n        <h2>Sorry, no movies were found!</h2>\r\n      )}\r\n    </div>   \r\n    </>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\jeffp\\OneDrive\\Documents\\GitHub\\CineMatch\\cinematch-client\\src\\CineMatch.js",["20","21","22"],[],"import { Modal, show, Button } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst API_IMG = \"https://image.tmdb.org/t/p/w500/\";\r\nconst API_BASE = \"https://api.themoviedb.org/3\";\r\nconst API_KEY = \"b5d2f69cf0491ce4441c4d04c4befc3d\";\r\n\r\nconst CineMatch = ({ title, poster_path, vote_average, release_date, overview, id }) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [cast, setCast] = useState([]);\r\n  const [director, setDirector] = useState(\"\");\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleClose = () => setShow(false);\r\n\r\n  useEffect(() => {\r\n    const getMovieDetails = async () => {\r\n      try {\r\n        const res = await fetch(`${API_BASE}/movie/${id}?api_key=${API_KEY}&append_to_response=credits`);\r\n        const data = await res.json();\r\n        const credits = data.credits;\r\n\r\n        // Get directors\r\n        const directors = credits.crew\r\n            .filter((person) => person.job === \"Director\")\r\n            .map((person) => person.name);\r\n        setDirector(directors);\r\n\r\n        // Get top 5 cast members\r\n        const cast = credits.cast.slice(0, 5).map((person) => person.name);\r\n        setCast(cast);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n\r\n    getMovieDetails();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div className=\"card text-center bg-secondary mb-3\">\r\n      <div className=\"card-body\">\r\n        <img className=\"card-img-top\" src={API_IMG + poster_path} />\r\n        <div className=\"card-body\">\r\n          <button type=\"button\" className=\"btn btn-dark\" onClick={handleShow}>View More</button>\r\n          <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title></Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <img className=\"card-img-top\" style={{ width: '14rem' }} src={API_IMG + poster_path} />\r\n              <h3>{title}</h3>\r\n              <strong>Release Date: </strong>{release_date}\r\n              <br></br>\r\n              <br></br>\r\n              <strong>IMDb: </strong>{vote_average}\r\n              <br></br>\r\n              <br></br>\r\n              {director.length > 0 &&\r\n                <div>\r\n                    <strong>Director(s):</strong>\r\n                    <ul>\r\n                        {director.map((person) => <li key={person}>{person}</li>)}\r\n                    </ul>\r\n                </div>\r\n              }\r\n              {cast.length > 0 &&\r\n                <div>\r\n                  <strong>Cast:</strong>\r\n                  <ul>\r\n                    {cast.map((person) => <li key={person}>{person}</li>)}\r\n                  </ul>\r\n                </div>\r\n              }\r\n              <strong>Overview:</strong>\r\n              <p>{overview}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CineMatch;",{"ruleId":"23","severity":1,"message":"24","line":8,"column":7,"nodeType":"25","messageId":"26","endLine":8,"endColumn":17},{"ruleId":"23","severity":1,"message":"27","line":1,"column":17,"nodeType":"25","messageId":"26","endLine":1,"endColumn":21},{"ruleId":"28","severity":1,"message":"29","line":44,"column":9,"nodeType":"30","endLine":44,"endColumn":69},{"ruleId":"28","severity":1,"message":"29","line":52,"column":15,"nodeType":"30","endLine":52,"endColumn":102},"no-unused-vars","'API_SEARCH' is assigned a value but never used.","Identifier","unusedVar","'show' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]